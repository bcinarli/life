{"version":3,"sources":["_app.js","app/cell.js","app/events.js","app/generations.js","app/habitat.js","app/world.js"],"names":[],"mappingszEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"life-in-cells.js","sourcesContent":["/**\n * @author Bilal Cinarli\n */\n\n(function() {\n    'use strict';\n\n    var app = (function() {\n        var modules = [];\n\n        var registerInit = function(module) {\n            modules.push(module);\n        };\n\n        var init = function() {\n            initModules();\n        };\n\n        var initModules = function() {\n            if(modules.length > 0) {\n                modules.forEach(function(module) {\n                    if(typeof app[module] !== 'undefined' && !app[module].isInitialized()) {\n                        app[module].init();\n                    }\n                });\n            }\n        };\n\n        var ready = function(fn) {\n            if(document.readyState !== 'loading') {\n                fn();\n            } else {\n                document.addEventListener('DOMContentLoaded', fn);\n            }\n        };\n\n        return {\n            init:         init,\n            registerInit: registerInit,\n            ready:        ready\n        };\n    })();\n\n    window.life = app;\n})();","/**\n * @author Bilal Cinarli\n */\n\n(function(app) {\n    'use strict';\n\n    var Cell = function(options) {\n        this.alive       = options.alive === true;\n        this.coordinates = options.coordinates;\n        this.neighbours  = [];\n    };\n\n    Cell.prototype.findNeighbours = function() {\n        var neighbours = [],\n            x          = this.coordinates[0],\n            y          = this.coordinates[1];\n\n        for(var i = x - 1; i <= x + 1; i++) {\n            for(var j = y - 1; j <= y + 1; j++) {\n                neighbours.push([i, j]);\n            }\n        }\n\n        // remove itself\n        neighbours.splice(4, 1);\n\n        this.neighbours = neighbours;\n    };\n\n    Cell.prototype.willDie = function(currentWorld) {\n        var aliveNeighbours = this.aliveNeighbours(currentWorld);\n\n        return aliveNeighbours < 2 || aliveNeighbours > 3;\n    };\n\n    Cell.prototype.willBorn = function(currentWorld) {\n        var aliveNeighbours = this.aliveNeighbours(currentWorld);\n\n        return aliveNeighbours === 3;\n    };\n\n    Cell.prototype.aliveNeighbours = function(currentWorld) {\n        var aliveNeighbours = 0;\n\n        if(this.neighbours.length === 0) {\n            this.findNeighbours();\n        }\n\n        this.neighbours.map(function(neighbour) {\n            if(typeof currentWorld[neighbour[0]] !== 'undefined' && typeof currentWorld[neighbour[0]][neighbour[1]] !== 'undefined') {\n                if(currentWorld[neighbour[0]][neighbour[1]].isAlive()) {\n                    aliveNeighbours++;\n                }\n            }\n        });\n\n        return aliveNeighbours;\n    };\n\n    Cell.prototype.die = function() {\n        this.alive = false;\n    };\n\n    Cell.prototype.born = function() {\n        this.alive = true;\n    };\n\n    Cell.prototype.isAlive = function() {\n        return this.alive;\n    };\n\n    app.cell = Cell;\n})(life);","/**\n * @author Bilal Cinarli\n */\n\n(function(app) {\n    'use strict';\n\n    app.events = (function() {\n        var initialized   = false,\n            publicMethods = {},\n            actionButtons,\n            buttonNext,\n            buttonPlayPause,\n            buttonRandom,\n            isRunning     = false,\n            interval;\n\n        publicMethods.init = function() {\n            initialized = true;\n\n            actionButtons   = document.getElementById('life-app-actions');\n            buttonNext      = actionButtons.querySelector('.next-generation');\n            buttonPlayPause = actionButtons.querySelector('.run-generations');\n            buttonRandom    = actionButtons.querySelector('.random-habitat');\n\n            bindEvents();\n        };\n\n        publicMethods.isInitialized = function() {\n            return initialized;\n        };\n\n        var bindEvents = function() {\n            buttonNext.addEventListener('click', nextGenerationAction);\n            buttonPlayPause.addEventListener('click', runGenerations);\n            buttonRandom.addEventListener('click', randomHabitat);\n        };\n\n        var nextGenerationAction = function() {\n            app.generations.nextGeneration();\n            app.habitat.nextGeneration();\n        };\n\n        var runGenerations = function() {\n            if(isRunning) {\n                clearInterval(interval);\n                isRunning = false;\n            }\n\n            else {\n                isRunning = true;\n                interval  = setInterval(nextGenerationAction, 500);\n            }\n        };\n\n        var randomHabitat = function() {\n            if(isRunning) {\n                clearInterval(interval);\n                isRunning = false;\n            }\n\n            app.World = new app.world(app.World.size, true);\n            app.habitat.nextGeneration();\n        };\n\n        return publicMethods;\n    })();\n\n    app.registerInit('events');\n})(life);","/**\n * @author Bilal Cinarli\n */\n\n(function(app) {\n    'use strict';\n\n    app.generations = (function() {\n        var publicMethods = {};\n\n        publicMethods.nextGeneration = function() {\n            var nextGen,\n                currentWorld = freezeWorld(app.World.cells);\n\n            nextGen = app.World.cells.map(function(row) {\n                return row.map(function(cell) {\n                    if(cell.willDie(currentWorld)) {\n                        cell.die();\n                    }\n\n                    if(cell.willBorn(currentWorld)) {\n                        cell.born();\n                    }\n\n                    return cell;\n                });\n            });\n\n            app.World.cells = nextGen;\n        };\n\n        var freezeWorld = function(cells) {\n            return cells.map(function(row) {\n                return row.map(function(cell) {\n                    return new app.cell({coordinates: cell.coordinates, alive: cell.alive});\n                });\n            });\n        };\n\n        return publicMethods;\n    })();\n})(life);","/**\n * @author Bilal Cinarli\n */\n\n(function(app) {\n    'use strict';\n\n    app.habitat = (function() {\n        var publicMethods = {},\n            initialized   = false,\n            root          = {},\n            cells         = [];\n\n        publicMethods.init = function() {\n            initialized = true;\n            root.app    = document.getElementById('life-app');\n            root.world  = document.getElementById('life-app-world');\n\n            publicMethods.nextGeneration();\n        };\n\n        publicMethods.nextGeneration = function() {\n            clearWorld();\n            renderWorld();\n        };\n\n        var renderWorld = function() {\n            cells = [];\n\n            app.World.cells.map(function(row) {\n                row.map(function(cell) {\n                    var _cell = document.createElement('span');\n\n                    _cell.classList.add('single-cell');\n\n                    if(cell.alive) {\n                        _cell.classList.add('is-alive');\n                    }\n\n                    _cell.cellData = cell;\n                    cells.push(_cell);\n                });\n            });\n\n            cells.forEach(function(cell) {\n                root.world.appendChild(cell);\n            });\n        };\n\n        var clearWorld = function() {\n            root.world.innerHTML = '';\n        };\n\n        publicMethods.isInitialized = function() {\n            return initialized;\n        };\n\n        return publicMethods;\n    })();\n\n    app.registerInit('habitat');\n})(life);","/**\n * @author Bilal Cinarli\n */\n\n(function(app) {\n    'use strict';\n\n    var World = function(size, random) {\n        this.size   = size;\n        this.random = random === true;\n        this.cells  = [];\n\n        this.init();\n    };\n\n    World.prototype.init = function() {\n        this.getCells();\n    };\n\n    World.prototype.getCells = function() {\n        for(var i = 0; i < this.size; i++) {\n            this.cells[i] = [];\n\n            for(var j = 0; j < this.size; j++) {\n                var isAlive = false;\n\n                if(this.random) {\n                    isAlive = Math.random() >= 0.8;\n                }\n\n                this.cells[i][j] = new app.cell({coordinates: [i, j], alive: isAlive});\n            }\n        }\n    };\n\n    app.world = World;\n})(life);"]}