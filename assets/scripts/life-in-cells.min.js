/*! life-in-cells 
 *  Simple HTML build with Gulp based tasks 
 *  @author Bilal Cinarli <bcinarli@gmail.com> 
 *  @version 0.1.0 
 *  @build Sun Jan 15 2017 17:52:22 GMT+0300 (+03) 
 */
!function(){"use strict";var t=function(){var n=[],e=function(t){n.push(t)},i=function(){o()},o=function(){n.length>0&&n.forEach(function(n){"undefined"==typeof t[n]||t[n].isInitialized()||t[n].init()})},r=function(t){"loading"!==document.readyState?t():document.addEventListener("DOMContentLoaded",t)};return{init:i,registerInit:e,ready:r}}();window.life=t}(),function(t){"use strict";var n=function(t){this.alive=t.alive===!0,this.coordinates=t.coordinates,this.neighbours=[]};n.prototype.findNeighbours=function(){for(var t=[],n=this.coordinates[0],e=this.coordinates[1],i=n-1;i<=n+1;i++)for(var o=e-1;o<=e+1;o++)t.push([i,o]);t.splice(4,1),this.neighbours=t},n.prototype.willDie=function(){var t=this.aliveNeighbours();return t<2||t>3},n.prototype.willBorn=function(){var t=this.aliveNeighbours();return 3===t},n.prototype.aliveNeighbours=function(){var n=0;return 0===this.neighbours.length&&this.findNeighbours(),this.neighbours.map(function(e){"undefined"!=typeof t.World.cells[e[0]]&&"undefined"!=typeof t.World.cells[e[0]][e[1]]&&t.World.cells[e[0]][e[1]].isAlive()&&n++}),n},n.prototype.die=function(){this.alive=!1},n.prototype.born=function(){this.alive=!0},n.prototype.isAlive=function(){return this.alive},t.cell=n}(life),function(t){"use strict";t.events=function(){var n,e,i,o,r,a=!1,l={},s=!1;l.init=function(){a=!0,n=document.getElementById("life-app-actions"),e=n.querySelector(".next-generation"),i=n.querySelector(".run-generations"),o=n.querySelector(".random-habitat"),c()},l.isInitialized=function(){return a};var c=function(){e.addEventListener("click",u),i.addEventListener("click",f),o.addEventListener("click",d)},u=function(){t.generations.nextGeneration(),t.habitat.nextGeneration()},f=function(){s?(clearInterval(r),s=!1):(s=!0,r=setInterval(u,500))},d=function(){s&&(clearInterval(r),s=!1),t.World=new t.world(t.World.size,(!0)),t.habitat.nextGeneration()};return l}(),t.registerInit("events")}(life),function(t){"use strict";t.generations=function(){var n={};return n.nextGeneration=function(){var n=[];t.World.cells.map(function(t,e){n[e]=t.map(function(t,n){return t.willDie()&&t.die(),t.willBorn()&&t.born(),t})})},n}()}(life),function(t){"use strict";t.habitat=function(){var n={},e=!1,i={},o=[];n.init=function(){e=!0,i.app=document.getElementById("life-app"),i.world=document.getElementById("life-app-world"),n.nextGeneration()},n.nextGeneration=function(){a(),r()};var r=function(){o=[],t.World.cells.map(function(t){t.map(function(t){var n=document.createElement("span");n.classList.add("single-cell"),t.alive&&n.classList.add("is-alive"),n.cellData=t,o.push(n)})}),o.forEach(function(t){i.world.appendChild(t)})},a=function(){i.world.innerHTML=""};return n.isInitialized=function(){return e},n}(),t.registerInit("habitat")}(life),function(t){"use strict";var n=function(t,n){this.size=t,this.random=n===!0,this.cells=[],this.init()};n.prototype.init=function(){this.getCells()},n.prototype.getCells=function(){for(var n=0;n<this.size;n++){this.cells[n]=[];for(var e=0;e<this.size;e++){var i=!1;this.random&&(i=Math.random()>=.8),this.cells[n][e]=new t.cell({coordinates:[n,e],alive:i})}}},t.world=n}(life);